import javax.swing.*;
import java.awt.*;
import java.io.*;
import java.net.*;
import java.util.*;

public class intermediateModule {
	
	public class Intermediate_Node extends javax.swing.JFrame implements Runnable {
		Socket soc, soc1, soc2;
		String str, filestring;
		String [] split;
		String sip, eip1, eip2, eip3, eip4;
		Vector vector,v1;
		String[] store;
		String temp;
		String dp="a";
		
		public Intermediate_Node() {
			initComponents();
			setBounds(150,150,710,570);
			try
			{
				vector = new Vector();
				BufferedReader br1 = new BufferedReader(new FileReader("endtip.txt"));
				while((temp = br1.readLine())!=null)
				{
					vector.addElement(temp);
					v1 = loadFun(vector);
					System.out.println("The Value is: " +temp);
				}
			}
			catch(Exception e)
			{
				System.out.println("The Reading Exception: " +e.toString());
			}
			new Thread(this).start();
		}
		
		public void run() {
			ServerSocket ss=null, ss1=null, ss2=null;
			try
			{
				ss = new ServerSocket(1234);
				ss1 = new ServerSocket(4321);
			}
			catch(Exception e)
			{
				System.out.println("e= " +e.toString());
			}
			while(true) {
				try
				{
					//jTextArea1.append("message=");
					soc = ss.accept();
					soc1 = ss1.accept();
					System.out.println("2");
					Scanner s = new Scanner(soc.getInputStream());
					str = s.nextLine();
					System.out.println("The collected IP values are: " +str);
					String path1 = null;
					InputStream in = soc1.getInputStream();
					byte filecontent[] = new byte[60000];
					in.read(filecontent, 0, filecontent.length);
					String string = new String(filecontent);
					filestring = string.trim();
					System.out.println("The string value is: " +filestring);
					if(dp.equals(filestring))
					{
						jTextArea1.setText("The file contents are already received");
					}
					else
					{
						jTextArea1.setText("The IP Address: " +str+ "\n" +"The file content is "+filestring+"\n");
						dp = filestring;
					}
				}
				catch(Exception e)
				{
					System.out.println("The intermediate node: " +e.toString());
				}
			}
		}
		/** Creates new form Intermediate Node */
		/** This method is called from within the constructor to initialize the form.
		 * WARNING: Do Not modify this code. The contents of this method is always
		 * regenerated by the form editor.
		 */
		//@Suppress Warnings("Unchecked")
		// <editor-fold	default state="Collapsed"	desc="Generated Code">
		//GEN-BEGIN: initComponents
		private void initComponents() {
			
			jPanel1 = new javax.swing.JPanel();
			jScrollPane1 = new javax.swing.jScrollPane();
			jTextArea1 = new javax.swing.jTextArea();
			jButton1 = new javax.swing.JButton();
			jButton2 = new javax.swing.JButton();
			jLabel1 = new javax.swing.JLabel();
			
			setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
			setResizeable(false);
			
			jPanel1.setBackground(new java.awt.Color(6,66.36));
			jPanel1.setLayout(null);
			
			jTextArea1.setEditable(false);
			jTextArea1.setColumns(20);
			jTextArea1.setRows(5);
			
			jScrollPane1.setViewportView(jTextArea1)
			jPanel1.add(jScrollPane1);
			jScrollPane1.setBounds(50, 70, 470, 280);
			
			jButton1.setFont(new java.awt.Font("Times New Roman", 1, 24)); //NOI18N
			jButton1.setText("Forward");
			jButton1.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					jButton1ActionPerformed(evt);
				}
			});
			jPanel1.add(jButton1);
			jButton1.setBounds(90, 370, 150, 37);
		
			jButton2.setFont(new java.awt.Font("Times New Roman", 1, 24));
			jButton2.setText("Close");
			jButton2.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent evt) {
					jButton2ActionPerformed(evt);
				}
			});
			jPanel1.add(jButton2);
			jButton2.setBounds(340, 370, 150, 37);
			
			jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); //NOI18N
			jLabel1.setForeground(new java.awt.Color(199, 165, 102));
			jLabel1.setText("Intermediate Node");
			jPanel1.add(jLabel1);
			jLabel1.setBounds(180, 18, 192, 40);
			
			/*
			javax.swing.GroupLayout = newjavax.swing.GroupLayout(getContentPane());
			getContentPane().setLayout(layout);
			layout.setHorizontalGroup(
					layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).
					addComponent(jPanel1,javax.swing.GroupLayout.Alignment.TRAILING,
					javax.swing.GroupLayout.DEFAULT_SIZE,537,Short.MAX_VALUE));
			layout.setVerticalGroup(	
					layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).
					addComponent(jPanel1,javax.swing.GroupLayout.DEFAULT_SIZE,415,Short.MAX_VALUE)); 
			*/
			
			getContentPane().add(jPanel1);
			}//</editor-fold>//GEN-END:initComponents
		
		private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
			//GEN-FIRST:event_jButton1ActionPerformed
			//TODO: Add handling code here
			if(evt.getSource()==jButton1) {
				for(int j = 0; j<v1.size(); j++) {
					try
					{
						String xx = v1.get(j).toString();
						java.util.StringTokenizer tokenizer = new java.util.StringTokenizer(xx, "@");
						String t1 = tokenizer.nextToken().trim();
						String t2 = tokenizer.nextToken().trim();
						JOptionPane.showMessageDialog(null,"Forwarding to the destination" +t1);
						Socket soc1 = new Socket(t1,2345);
						System.out.println("Vector= " +v1.get(j));
						System.out.println("Soc1= " +soc1);
						PrintWriter pw = new PrintWriter(soc1.getOutputStream(), true);
						pw.println();
						Socket soc2 = new Socket(t1,5432);
						PrintWriter pw1 = new PrintWriter(soc2.getOutputStream(), true);
						pw.println(filestring);
						System.out.println("After forward is: " +filestring);
					}
					catch(Exception e)
					{
						System.out.println("The Forwarding Exception is: " +e.toString());
					}
				}
			}
		}//GEN-LAST:event_jButton1ActionPerformed
		
		private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
			//GEN-FIRST:event_jButton2ActionPerformed
			//TODO: Add handling code here
			System.exit(0);
		}//GEN-LAST:event_jButton2ActionPerformed

	}	

	/**
	 * @param args the command line arguments
	 */
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		new Intermediate_Node().setVisible(true);
	}
	
	//Variables declaration - do not modify // GEN-BEGIN: Variables
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	
	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel jPanel1;
	
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextArea jTextArea1;
	// End of Variables declaration //GEN-END: Variables
	
	@SuppressWarnings("unchecked")
	Vector loadFun(Vector vx) {
		Vector vx1 = vx;
		Vector vx2 = new Vector();
		int size1 = vx1.size();
		int a[] = new int[size1];
		int temp;
		for (int i= 0; i<vx1.size(); i++) {
			String ip1 = (String)vx1.elementAt(i);
			System.out.println("ip1= " +ip1);
			
			//String ip2 = (String)vx1.elementAt(j+1);
			//System.out.println("ip2= " +ip2);
			
			String ipadr1 = ip1.substring(ip1.lastIndexOf('@')+1);
			//String ipadr2 = ip2.substring(ip2.lastIndexOf('@')+1);
			int n1 = Integer.parseInt(ipadr1);
			//int n2 = Integer.parseInt(ipadr2);
			System.out.println("n1="+n1);
			//System.out.println("n2="+n2);
			a[i] = n1;
		}
		//System.out.println("a= "+a[0]);
		for (int i= 0; i<a.length; i++) {
			for (int j= 0; j<(a.length-i-1); j++) {
				if(a[j]<a[j+1]) {
					temp=a[j];
					a[j] = a[j+1];
					a[j+1] = temp;
				}
			}
		}
		for (int i= 0; i<a.length; i++) {
			System.out.println("a= "+a[i]);
			for (int j= 0; j<a.length; i++) {
				for (int i= 0; i<vx1.size(); i++) {
					String ip1 = (String)vx1.elementAt(i);
					System.out.println("ip1= " +ip1);
					
					//String ip2 = (String)vx1.elementAt(j+1);
					//System.out.println("ip2= " +ip2);
					
					String ipadr1 = ip1.substring(ip1.lastIndexOf('@')+1);
					//String ipadr2 = ip2.substring(ip2.lastIndexOf('@')+1);
					int n1 = Integer.parseInt(ipadr1);
					//int n2 = Integer.parseInt(ipadr2);
					System.out.println("n1="+n1);
					//System.out.println("n2="+n2);
					if(n1 == a[j]) {
						vx2.addElement(ip1);
					}
				}
			}
			System.out.println("vx2="+vx2);
			return vx2;
		}
	}
}
